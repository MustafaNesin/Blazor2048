@page "/"
@page "/game"
@inject IGameService GameService

<div class="container-fluid game" @onkeydown="KeyDown" tabindex="-1" @ref="_container" 
         unselectable="on"
         onselectstart="return false;"
         style="-moz-user-select: none; -webkit-user-select: none; -ms-user-select:none; user-select:none; -o-user-select:none;">
    <div class="row justify-content-center">
        <div class="col-auto">
            <GameComponent Game="@GameService.Game" NewGameCallback="@GameService.NewGameAsync"/>
        </div>
    </div>
</div>

@code {
#nullable enable
    private ElementReference _container;

    protected override async Task OnInitializedAsync()
    {
        if (!GameService.IsGameStarted)
            if (!await GameService.LoadGameAsync())
                await GameService.NewGameAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
            return;

        GameService.Container = _container;
        await GameService.FocusAsync();
    }

    private async Task KeyDown(KeyboardEventArgs e)
    {
        if (!GameService.IsGameStarted)
            return;

        switch (e.Key)
        {
            case "Backspace":
                await GameService.UndoAsync();
                break;
            case "ArrowUp":
                await GameService.MoveAsync(Direction.Up);
                break;
            case "ArrowRight":
                await GameService.MoveAsync(Direction.Right);
                break;
            case "ArrowDown":
                await GameService.MoveAsync(Direction.Down);
                break;
            case "ArrowLeft":
                await GameService.MoveAsync(Direction.Left);
                break;
        }
    }

}