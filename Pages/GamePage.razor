@page "/"
@page "/game"
@inject IGameService GameService

<div class="container-fluid game" @onkeydown="KeyDown" tabindex="-1" @ref="_container">
    <div class="row justify-content-center">
        <div class="col-auto">
            <div class="row my-3 justify-content-center">
                <div class="col-auto">
                    <span class="display-3 font-weight-bold">2048</span>
                </div>
            </div>
            <GameComponent Game="@GameService.Game" NewGameClick="@GameService.NewGameAsync"/>
            <div class="row my-3 justify-content-center text-center">
                <div class="col-auto">
                    <span>
                        Use the <strong>arrow keys</strong> on your keyboard or <br/>
                        the <strong>arrow buttons</strong> above to move tiles.
                    </span>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
#nullable enable
    private ElementReference _container;

    protected override async Task OnInitializedAsync()
    {
        if (!GameService.IsGameStarted)
            if (!await GameService.LoadGameAsync())
                await GameService.NewGameAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await _container.FocusAsync();
    }

    private async Task KeyDown(KeyboardEventArgs e)
    {
        if (!GameService.IsGameStarted)
            return;

        switch (e.Key)
        {
            case "ArrowUp":
                await GameService.MoveAsync(Direction.Up);
                break;
            case "ArrowRight":
                await GameService.MoveAsync(Direction.Right);
                break;
            case "ArrowDown":
                await GameService.MoveAsync(Direction.Down);
                break;
            case "ArrowLeft":
                await GameService.MoveAsync(Direction.Left);
                break;
        }
    }

}