@inject IGameService GameService

<div class="row my-3 align-items-center justify-content-between">
    <div class="col-auto px-0">
        <div class="row">
            <div class="col">
                <span class="font-weight-bold">Best:</span>
                <span>@GameService.BestScore</span>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <span class="font-weight-bold">Score:</span>
                <span class="mr-1">@(Game?.Score ?? 0)</span>
                @if (Game is not null)
                {
                    <span class="font-weight-bolder">
                        @if (Game.Over)
                        {
                            @:(Over)
                        }
                        else if (Game.Won)
                        {
                            @:(Won)
                        }
                    </span>
                }
            </div>
        </div>
    </div>
    <div class="col-auto px-0 text-right">
        <div class="row">
            <div class="col">
                <button class="btn btn-game" @onclick="NewGameCallback">
                    New Game
                </button>
            </div>
        </div>
        <div class="row mt-1">
            <div class="col">
                <button class="btn btn-game" @onclick="UndoAsync" disabled="@(GameService.Game?.CanUndo == false)">
                    Undo <span class="oi oi-action-undo"></span>
                </button>
            </div>
        </div>
    </div>
</div>
<div class="row justify-content-center">
    <GridComponent Grid="@Game?.Grid"/>
</div>
<div class="row my-3">
    <div class="col">
        <div class="row justify-content-center">
            <div class="col-auto">
                <button class="btn btn-game" @onclick="MoveUpAsync">
                    <i class="oi oi-arrow-thick-top"></i>
                </button>
            </div>
        </div>
        <div class="row justify-content-center my-2">
            <div class="col-auto mr-3">
                <button class="btn btn-game" @onclick="MoveLeftAsync">
                    <i class="oi oi-arrow-thick-left"></i>
                </button>
            </div>
            <div class="col-auto ml-3">
                <button class="btn btn-game" @onclick="MoveRightAsync">
                    <i class="oi oi-arrow-thick-right"></i>
                </button>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-auto">
                <button class="btn btn-game" @onclick="MoveDownAsync">
                    <i class="oi oi-arrow-thick-bottom"></i>
                </button>
            </div>
        </div>
    </div>
</div>

@code {
#nullable enable

    [Parameter]
    public EventCallback NewGameCallback { get; set; }

    [Parameter]
    public Game? Game { get; set; }

    private async Task UndoAsync()
    {
        await GameService.UndoAsync();
        await GameService.FocusAsync();
    }

    private async Task MoveUpAsync() => await GameService.MoveAsync(Direction.Up);
    private async Task MoveRightAsync() => await GameService.MoveAsync(Direction.Right);
    private async Task MoveDownAsync() => await GameService.MoveAsync(Direction.Down);
    private async Task MoveLeftAsync() => await GameService.MoveAsync(Direction.Left);
}